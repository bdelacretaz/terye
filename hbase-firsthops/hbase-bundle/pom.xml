<?xml version="1.0" encoding="UTF-8"?>
<project 
    xmlns="http://maven.apache.org/POM/4.0.0" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    
    <modelVersion>4.0.0</modelVersion>

    <groupId>ch.x42.terye</groupId>
    <artifactId>hbase-bundle</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>bundle</packaging>

    <name>hbase-bundle</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.7</version>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <!-- include all dependencies transitively -->
                        <Embed-Dependency>*</Embed-Dependency>
                        <Embed-Transitive>true</Embed-Transitive>
                        <!-- 
                          Mark all imports as optional so that Sling doesn't complain. This is a
                          workaround and requires the packages that are really needed to be available
                          (otherwise there will be NoClassDefFoundErrors).
                        -->
                        <Import-Package>*;resolution:=optional</Import-Package>
                        <!-- export needed packages, but leave classes in the jars (avoids duplicates) -->
                        <_exportcontents>
                            org.apache.hadoop.conf,
                            org.apache.hadoop.hbase.*
                        </_exportcontents>
                    </instructions>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
      <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>3.8.1</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-core</artifactId>
          <version>1.0.3</version>
      </dependency>
      <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase</artifactId>
          <version>0.94.1</version>
      </dependency>
  </dependencies>
  
</project>
